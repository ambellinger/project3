{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  //perform search\n  //   search: function(query) {\n  //     return axios.get(\"/api/google\", { params: { q: \"title:\" + query} });\n  //   },\n  // Gets all books\n  getBuildings: function getBuildings() {\n    return axios.get(URL);\n  },\n  // Gets the book with the given id\n  getBook: function getBook(id) {\n    return axios.get(\"/api/buildings/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBuilding: function deleteBuilding(id) {\n    return axios.delete(\"/api/buildings/\" + id);\n  },\n  update: function update(id) {\n    return axios.delete(\"/api/buildigns/\" + id);\n  },\n  // Saves a book to the database\n  saveBuilding: function saveBuilding(buildingData) {\n    console.log(buildingData);\n    return axios.post(\"/api/buildings\", buildingData);\n  }\n};","map":{"version":3,"sources":["/Users/emilydalton/Desktop/NU_Bootcamp/project3/client/src/utils/API.js"],"names":["axios","getBuildings","get","URL","getBook","id","deleteBuilding","delete","update","saveBuilding","buildingData","console","log","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,eAAe;AACb;AACF;AACA;AACA;AAEE;AACAC,EAAAA,YAAY,EAAE,wBAAW;AACvB,WAAOD,KAAK,CAACE,GAAN,CAAUC,GAAV,CAAP;AACD,GATY;AAYb;AACAC,EAAAA,OAAO,EAAE,iBAASC,EAAT,EAAa;AACpB,WAAOL,KAAK,CAACE,GAAN,CAAU,oBAAoBG,EAA9B,CAAP;AACD,GAfY;AAgBb;AACAC,EAAAA,cAAc,EAAE,wBAASD,EAAT,EAAa;AAC3B,WAAOL,KAAK,CAACO,MAAN,CAAa,oBAAoBF,EAAjC,CAAP;AACD,GAnBY;AAqBbG,EAAAA,MAAM,EAAE,gBAASH,EAAT,EAAa;AACnB,WAAOL,KAAK,CAACO,MAAN,CAAa,oBAAoBF,EAAjC,CAAP;AACD,GAvBY;AAwBb;AACAI,EAAAA,YAAY,EAAE,sBAASC,YAAT,EAAuB;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACA,WAAOV,KAAK,CAACa,IAAN,CAAW,gBAAX,EAA6BH,YAA7B,CAAP;AACD;AA5BY,CAAf","sourcesContent":["import axios from \"axios\";\n\n\nexport default {\n  //perform search\n//   search: function(query) {\n//     return axios.get(\"/api/google\", { params: { q: \"title:\" + query} });\n//   },\n  \n  // Gets all books\n  getBuildings: function() {\n    return axios.get(URL);\n  },\n\n \n  // Gets the book with the given id\n  getBook: function(id) {\n    return axios.get(\"/api/buildings/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBuilding: function(id) {\n    return axios.delete(\"/api/buildings/\" + id);\n  },\n\n  update: function(id) {\n    return axios.delete(\"/api/buildigns/\" + id);\n  },\n  // Saves a book to the database\n  saveBuilding: function(buildingData) {\n    console.log(buildingData)\n    return axios.post(\"/api/buildings\", buildingData);\n  }\n\n\n\n};\n"]},"metadata":{},"sourceType":"module"}